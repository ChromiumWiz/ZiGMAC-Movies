[{"F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\index.js":"1","F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\reportWebVitals.js":"2","F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\App.js":"3","F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\movie\\Movie.js":"4","F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\recent\\Recent.js":"5","F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\smovie\\Smovie.js":"6","F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\searchPage\\SearchPage.js":"7","F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\login\\Login.js":"8","F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\downloadMovie\\DownloadMovie.js":"9","F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\tv\\Tv.js":"10","F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\navigation\\Nav.js":"11","F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\downloadMovie\\DMovCard.js":"12","F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\moviecard\\MovieCard.js":"13","F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\constants\\HOSTS_CONSTANT.js":"14","F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\smovie\\SMovCard.js":"15","F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\fetchList\\FetchListAlt.js":"16","F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\profile\\Profile.js":"17","F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\search\\SearchF.js":"18"},{"size":615,"mtime":1653820195296,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1653820195349,"results":"21","hashOfConfig":"20"},{"size":1628,"mtime":1653836601078,"results":"22","hashOfConfig":"20"},{"size":176,"mtime":1653820195280,"results":"23","hashOfConfig":"20"},{"size":1751,"mtime":1653820195280,"results":"24","hashOfConfig":"20"},{"size":1955,"mtime":1653820195280,"results":"25","hashOfConfig":"20"},{"size":3253,"mtime":1653820195280,"results":"26","hashOfConfig":"20"},{"size":8702,"mtime":1653820195280,"results":"27","hashOfConfig":"20"},{"size":5654,"mtime":1653820195264,"results":"28","hashOfConfig":"20"},{"size":171,"mtime":1653820195280,"results":"29","hashOfConfig":"20"},{"size":1049,"mtime":1653836677350,"results":"30","hashOfConfig":"20"},{"size":2887,"mtime":1653820195264,"results":"31","hashOfConfig":"20"},{"size":877,"mtime":1653836458094,"results":"32","hashOfConfig":"20"},{"size":165,"mtime":1653823950003,"results":"33","hashOfConfig":"20"},{"size":3324,"mtime":1653820195280,"results":"34","hashOfConfig":"20"},{"size":6181,"mtime":1657567292262,"results":"35","hashOfConfig":"20"},{"size":5880,"mtime":1653820195280,"results":"36","hashOfConfig":"20"},{"size":2040,"mtime":1653820195280,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"nu0vh8",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"40"},"F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\index.js",[],["85","86"],"F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\reportWebVitals.js",[],"F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\App.js",[],"F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\movie\\Movie.js",[],"F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\recent\\Recent.js",["87"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport \"./../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport MovieCard from \"./../moviecard/MovieCard\";\r\nimport { Film, Tv } from \"react-bootstrap-icons\";\r\nimport \"./recent.css\";\r\nimport  {API_HOST, CLIENT_HOST} from \"../../constants/HOSTS_CONSTANT\";\r\n\r\nfunction Recent() {\r\n  useEffect(() => {\r\n    fetchItemsMovies();\r\n    fetchItemsTv();\r\n  }, []);\r\n\r\n  const [movieItems, setMovieItems] = useState([]);\r\n\r\n  const [tvItems, settvItems] = useState([]);\r\n\r\n  const fetchItemsMovies = async () => {\r\n    const data = await fetch(\r\n      API_HOST+\"/movies?sort=recent&limit=18&offset=0&type=movie\"\r\n    );\r\n    const items = await data.json();\r\n    // console.log(items);\r\n    setMovieItems(items);\r\n  };\r\n\r\n  const fetchItemsTv = async () => {\r\n    const data = await fetch(\r\n      API_HOST+\"/movies?sort=recent&limit=18&offset=0&type=series\"\r\n    );\r\n    const items = await data.json();\r\n    // console.log(items);\r\n    settvItems(items);\r\n  };\r\n\r\n  // console.log(items);\r\n\r\n  return (\r\n    <Container fluid className=\"bodyCont\">\r\n      <Row>\r\n        <h2 className=\"materialHeading\">\r\n          <Film size=\"26\" /> Movies\r\n        </h2>\r\n      </Row>\r\n\r\n      <Row className=\"cardRow\">\r\n        {movieItems.map((item, index) => (\r\n          <MovieCard key={index} {...item} />\r\n        ))}\r\n      </Row>\r\n\r\n      <Row>\r\n        <h2 className=\"materialHeading\">\r\n          <Tv size=\"26\" /> TV\r\n        </h2>\r\n      </Row>\r\n\r\n      <Row className=\"cardRow\">\r\n        {tvItems.map((item, index) => (\r\n          <MovieCard key={index} {...item} />\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Recent;\r\n","F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\smovie\\Smovie.js",["88"],"import React, { useState, useEffect } from \"react\";\r\nimport { Col, Container } from \"react-bootstrap\";\r\nimport \"./../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./../moviecard/moviecard.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport SMovCard from \"./SMovCard\";\r\nimport  {API_HOST, CLIENT_HOST} from \"../../constants/HOSTS_CONSTANT\";\r\nrequire(\"es6-promise\").polyfill();\r\nrequire(\"isomorphic-fetch\");\r\n\r\nfunction Smovie() {\r\n  const [data, setData] = useState([null]);\r\n  // const [reqId, setId] = useState(\"\");\r\n\r\n  let { id } = useParams();\r\n\r\n  // setId(id);\r\n\r\n  useEffect(() => {\r\n    if (!data.id) {\r\n      fetchItems();\r\n    }\r\n  });\r\n\r\n  console.log(id);\r\n\r\n  var url = API_HOST+\"/movies/\" + id;\r\n\r\n  var imgurl = API_HOST+\"/image/\" + data.imdb_id;\r\n\r\n  const fetchItems = () => {\r\n    // setData(null);\r\n    // const data = await fetch(url);\r\n    // const items = await data.json();\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((items) => {\r\n        setData(items);\r\n      });\r\n    // console.log(items);\r\n  };\r\n\r\n  // if (id !== data.imdb_id) {\r\n  //   fetchItems();\r\n  // }\r\n  if (data === null) {\r\n    return <p>Loading data...</p>;\r\n  }\r\n  return (\r\n    <Col sm=\"12\">\r\n      <Container className=\"\">\r\n        {data ? (\r\n          <SMovCard\r\n            id={id}\r\n            imgurl={imgurl}\r\n            title={data.title}\r\n            rating={data.rating}\r\n            published={data.date_published}\r\n            genres={data.genre}\r\n            summary={data.summary}\r\n            stars={data.actors}\r\n            type={data.type}\r\n            local_path={data.local_path}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Container>\r\n\r\n      <div className=\"movSpace\"></div>\r\n\r\n      {/* <Container fluid>\r\n                <Row>\r\n                    <Recent/>\r\n                </Row>\r\n            </Container> */}\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default Smovie;\r\n","F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\searchPage\\SearchPage.js",["89","90","91","92","93","94"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport \"./../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./searchpage.css\";\r\nimport {\r\n  ArrowLeftCircleFill,\r\n  ArrowRightCircleFill,\r\n} from \"react-bootstrap-icons\";\r\nimport MovieCard from \"./../moviecard/MovieCard\";\r\nimport  {API_HOST, CLIENT_HOST} from \"../../constants/HOSTS_CONSTANT\";\r\nrequire(\"es6-promise\").polyfill();\r\nrequire(\"isomorphic-fetch\");\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction SearchPage() {\r\n  const [searchParam, setSearchParam] = useState(\"\");\r\n\r\n  // const type2 = type.type;\r\n\r\n  const type2 = \"movie\";\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  const [offset, setOff] = useState(0);\r\n\r\n  const [mCount, setCount] = useState([]);\r\n\r\n  const classes = useStyles();\r\n\r\n  let { sp } = useParams();\r\n\r\n  // useEffect(() => {\r\n  //   setSearchParam(sp);\r\n  //   console.log(\"search page : \" + searchParam);\r\n  // });\r\n\r\n  console.log(sp);\r\n  function spFetch() {\r\n    fetch(API_HOST+\"/search/\" + sp + \"/offset/0\")\r\n      .then((response) => response.json())\r\n      .then((json) => setData(json))\r\n      .then(setOff(10))\r\n      .then(setSearchParam(sp));\r\n  }\r\n  useEffect(() => {\r\n    spFetch();\r\n  }, []);\r\n\r\n  function spChage() {\r\n    if (sp != searchParam) {\r\n      spFetch();\r\n    }\r\n  }\r\n\r\n  spChage();\r\n\r\n  useEffect(() => {\r\n    fetch(API_HOST+\"/searchCount/\" + sp)\r\n      .then((response) => response.json())\r\n      .then((json) => setCount(json));\r\n  }, []);\r\n\r\n  function nextPage(offS) {\r\n    var url =\r\n      API_HOST+\"/search/\" + sp + \"/offset/\" + offS + \"\";\r\n    // console.log(offS);\r\n    var ofs = offS + 10;\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((json) => setData(json))\r\n      .then(setOff(ofs));\r\n  }\r\n\r\n  function prevPage(offS) {\r\n    var ofp = offset - 20;\r\n    var ofn = offset - 10;\r\n    var url = API_HOST+\"/search/\" + sp + \"/offset/\" + ofp + \"\";\r\n    // console.log(offS);\r\n    // console.log(offset);\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((json) => setData(json))\r\n      .then(setOff(ofn));\r\n  }\r\n\r\n  return (\r\n    <Container fluid className=\"bodyCont\">\r\n      <Row className=\"cardRow\">\r\n        {data.map((item, index) => (\r\n          <MovieCard key={index} {...item} />\r\n        ))}\r\n      </Row>\r\n\r\n      <div className=\"movSpace\"></div>\r\n\r\n      <Row>\r\n        <Col>\r\n          {offset > 10 && (\r\n            <ArrowLeftCircleFill\r\n              size=\"36\"\r\n              onClick={(e) => prevPage(offset)}\r\n              className=\"pageArrows\"\r\n            />\r\n          )}\r\n          {/* {console.log(mCount.searchCount)} */}\r\n          {/* {console.log(offset)} */}\r\n          {mCount.searchCount > offset && (\r\n            <ArrowRightCircleFill\r\n              size=\"36\"\r\n              onClick={(e) => nextPage(offset)}\r\n              className=\"pageArrows\"\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <div className=\"movSpace\"></div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SearchPage;\r\n","F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\login\\Login.js",["95","96","97","98"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"./../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BoxArrowInRight, BoxArrowLeft } from \"react-bootstrap-icons\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"./login.css\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport Profile from \"../profile/Profile\";\r\nimport  {API_HOST, CLIENT_HOST} from \"../../constants/HOSTS_CONSTANT\";\r\n\r\n// import { useState } from \"react\";\r\n\r\nfunction Login() {\r\n  const [data, setdata] = useState(false);\r\n  const [cookies, setCookie, removeCookie] = useCookies([\"userlogin\"]);\r\n  const [isShowing, setIsShowing] = useState(false);\r\n  const [signPop, setSignPop] = useState(false);\r\n  const [signupError, setSignupError] = useState(false);\r\n  const [loginError, setLoginError] = useState(false);\r\n  const [signupMessage, setSignupMessage] = useState(false);\r\n  const [isLoggedin, setIsLoggedin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loginCheck();\r\n  });\r\n\r\n  const signupSubmit = (e) => {\r\n    var user = document.getElementById(\"s_username\");\r\n    var pass = document.getElementById(\"s_password\");\r\n    var c_pass = document.getElementById(\"c_password\");\r\n\r\n    if (pass.value == c_pass.value) {\r\n      setSignupError(false);\r\n      var post_data = JSON.stringify({\r\n        user: user.value,\r\n        pass: pass.value,\r\n      });\r\n\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Content-Length\": Buffer.byteLength(post_data),\r\n        },\r\n        body: post_data,\r\n      };\r\n      fetch(API_HOST+\"/authregister\", requestOptions)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.status) {\r\n            setSignupError(\"User account with this email already exist\");\r\n          } else {\r\n            toggleSignup();\r\n            setSignupMessage(true);\r\n          }\r\n        });\r\n    } else {\r\n      // alert(\"Passwords does not match\");\r\n      setSignupError(\"Passwords doesn't match\");\r\n    }\r\n    e.preventDefault();\r\n  };\r\n  const loginSubmit = (e) => {\r\n    var user = document.getElementById(\"username\");\r\n    var pass = document.getElementById(\"passwod\");\r\n\r\n    var post_data = JSON.stringify({\r\n      user: user.value,\r\n      pass: pass.value,\r\n    });\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Content-Length\": Buffer.byteLength(post_data),\r\n      },\r\n      body: post_data,\r\n    };\r\n    fetch(API_HOST+\"/authlogin\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.status) {\r\n          setLoginError(\"Username or Password is incorrect\");\r\n        } else {\r\n          setLoginError(false);\r\n          lPopupHide();\r\n          // setSignupMessage(true);\r\n          // alert(data.data.session);\r\n          // console.log(data.data.session);\r\n\r\n          setCookie(\"userlogin\", data.data.session, {\r\n            path: \"/\",\r\n          });\r\n          loginCheck();\r\n        }\r\n      });\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  const loginCheck = () => {\r\n    var session = null;\r\n    session = cookies.userlogin;\r\n    console.log(\"session\" + session);\r\n    if (session) {\r\n      var post_data = JSON.stringify({\r\n        session: session,\r\n      });\r\n\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Content-Length\": Buffer.byteLength(post_data),\r\n        },\r\n        body: post_data,\r\n      };\r\n      fetch(API_HOST+\"/authsession\", requestOptions)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.status) {\r\n            // setLoginError(\"Username or Password is incorrect\");\r\n            removeCookie(\"userlogin\");\r\n          } else {\r\n            console.log(data.status);\r\n            setLoginError(false);\r\n            lPopupHide();\r\n            setIsLoggedin(true);\r\n          }\r\n        })\r\n        .then(setdata(true));\r\n    } else {\r\n      setdata(true);\r\n    }\r\n  };\r\n\r\n  const LoginWrap = () => {\r\n    return (\r\n      <>\r\n        <div className=\"loginContainer\">\r\n          <div className=\"loginOverlay\" onClick={(e) => lPopupHide()}></div>\r\n          <div className=\"loginWrapper\">\r\n            <h5>Login</h5>\r\n            <div className=\"clearFix\"></div>\r\n            {loginError ? <span className=\"loginError\">{loginError}</span> : \"\"}\r\n            {signupMessage ? (\r\n              <span className=\"signupMessage\">\r\n                User regitered, login using the credentials\r\n              </span>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <br />\r\n            <form onSubmit={(e) => loginSubmit(e)}>\r\n              <TextField\r\n                key=\"username\"\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                variant=\"outlined\"\r\n                required\r\n              />\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                key=\"password\"\r\n                id=\"passwod\"\r\n                label=\"Password\"\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                required\r\n              />\r\n              <br />\r\n              <br />\r\n              <Fab variant=\"extended\" color=\"primary\" type=\"submit\">\r\n                Login <BoxArrowInRight size=\"20\" />\r\n              </Fab>\r\n            </form>\r\n            <div className=\"clearFix\"></div>\r\n            or\r\n            <br />\r\n            <span className=\"linkSpan\" onClick={(e) => toggleSignup()}>\r\n              Signup\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const SignupWrap = () => {\r\n    return (\r\n      <>\r\n        <div className=\"loginContainer\">\r\n          <div className=\"loginOverlay\" onClick={(e) => lPopupHide()}></div>\r\n          <div className=\"loginWrapper\">\r\n            <h5>Signup</h5>\r\n            <div className=\"clearFix\"></div>\r\n            {signupError ? (\r\n              <span className=\"loginError\">{signupError}</span>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <br />\r\n            <form onSubmit={(e) => signupSubmit(e)}>\r\n              <TextField\r\n                id=\"s_username\"\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n                type=\"email\"\r\n                required\r\n              />\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                id=\"s_password\"\r\n                label=\"Password\"\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                required\r\n              />\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                id=\"c_password\"\r\n                label=\"Confirm Password\"\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                required\r\n              />\r\n              <br />\r\n              <br />\r\n              <Fab\r\n                type=\"submit\"\r\n                variant=\"extended\"\r\n                color=\"primary\"\r\n                //   onClick={(e) => signupSubmit()}\r\n              >\r\n                Signup <BoxArrowInRight size=\"20\" />\r\n              </Fab>\r\n            </form>\r\n            <div className=\"clearFix\"></div>\r\n            or\r\n            <br />\r\n            <span className=\"linkSpan\" onClick={(e) => toggleSignup()}>\r\n              Login\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const toggleSignup = () => {\r\n    if (signPop) {\r\n      setSignPop(false);\r\n    } else {\r\n      setSignPop(true);\r\n    }\r\n  };\r\n\r\n  const LoginPopup = () => {\r\n    return (\r\n      <>\r\n        {signPop ? (\r\n          <SignupWrap key=\"signWrap\" />\r\n        ) : (\r\n          <LoginWrap key=\"loginWrap\" />\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const lPopupShow = () => {\r\n    setIsShowing(true);\r\n  };\r\n\r\n  const lPopupHide = () => {\r\n    console.log(isShowing);\r\n    setIsShowing(false);\r\n  };\r\n\r\n  const LoginButton = () => {\r\n    return (\r\n      <>\r\n        <div className=\"loginButton\">\r\n          <Fab variant=\"extended\" onClick={(e) => lPopupShow()}>\r\n            <BoxArrowInRight size=\"20\" />\r\n          </Fab>\r\n        </div>\r\n\r\n        {isShowing ? <LoginPopup key=\"loginPop\" /> : \"\"}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {data ? (\r\n        isLoggedin ? (\r\n          <Profile session={cookies.userlogin} />\r\n        ) : (\r\n          <LoginButton />\r\n        )\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\downloadMovie\\DownloadMovie.js",["99","100","101","102","103"],"import React, { useState, useEffect } from \"react\";\r\nimport { Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport \"./../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./../moviecard/moviecard.css\";\r\nimport { Download } from \"react-bootstrap-icons\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport DMovCard from \"./DMovCard\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport  {API_HOST, CLIENT_HOST, FILE_SERVER_HOST} from \"../../constants/HOSTS_CONSTANT\";\r\nrequire(\"es6-promise\").polyfill();\r\nrequire(\"isomorphic-fetch\");\r\n\r\nfunction DownloadMovie() {\r\n  const [data, setData] = useState([null]);\r\n  const [files, setFiles] = useState([]);\r\n  const [tokenExpired, setTokenExpired] = useState(false);\r\n  // const [reqId, setId] = useState(\"\");\r\n  const [x, setX] = useState(false);\r\n  const [cookies, setCookie, removeCookie] = useCookies([\"userlogin\"]);\r\n\r\n  let { id } = useParams();\r\n\r\n  // setId(id);\r\n\r\n  useEffect(() => {\r\n    fetchItems();\r\n  }, []);\r\n\r\n  console.log(id);\r\n\r\n  var url = API_HOST+\"/movies/\" + id;\r\n\r\n  var imgurl = API_HOST+\"/image/\" + data.imdb_id;\r\n\r\n  var encoded = encodeURI(data.local_title);\r\n  var filesUrl =\r\n  FILE_SERVER_HOST+\"/services/files/list/\" + encoded + \"/\";\r\n\r\n  const fetchItems = async () => {\r\n    const data = await fetch(url);\r\n    const items = await data.json();\r\n    console.log(items);\r\n    setData(items);\r\n  };\r\n\r\n  const fetchFiles = async () => {\r\n    const fileData = await fetch(filesUrl);\r\n    const fileItems = await fileData.json().then(setX(true));\r\n    setFiles(fileItems);\r\n  };\r\n\r\n  if (data.local_title) {\r\n    if (!x) {\r\n      fetchFiles();\r\n    }\r\n  }\r\n\r\n  const FilesInfo = (files) => {\r\n    var fileslist = [];\r\n    if (files.files.path) {\r\n      fileslist = files.files.fileInfo;\r\n      console.log(files);\r\n\r\n      return (\r\n        <>\r\n          <div className=\"downloadWrapper\">\r\n            {fileslist.map((filesdetails, idx) => {\r\n              var size = filesdetails.size / 1048576;\r\n              size = Math.round(size);\r\n              return (\r\n                <>\r\n                  <p className=\"\" key={idx}>\r\n                    {filesdetails.filePath} - {size}MB{\"   \"}\r\n                    <Button\r\n                      onClick={(e) =>\r\n                        createToken(files.files.path, filesdetails.filePath)\r\n                      }\r\n                    >\r\n                      Download &nbsp;&nbsp;\r\n                      <Download size=\"26\" />\r\n                    </Button>\r\n                    <div className=\"clearfix\"></div>\r\n                  </p>\r\n                </>\r\n              );\r\n            })}\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return <></>;\r\n    }\r\n  };\r\n\r\n  if (data === null) {\r\n    return <p>Loading data...</p>;\r\n  }\r\n\r\n  const createToken = (basePath, path) => {\r\n    var filePath = path;\r\n    // console.log(filePath);\r\n\r\n    if(!cookies.userlogin)\r\n    {\r\n      alert(\"You need to LOGIN first to download\");\r\n    }\r\n\r\n    var post_data = JSON.stringify({\r\n      basePath: basePath,\r\n      path: filePath,\r\n      session: cookies.userlogin,\r\n    });\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Content-Length\": Buffer.byteLength(post_data),\r\n      },\r\n      body: post_data,\r\n    };\r\n    fetch(API_HOST+\"/createtoken\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => downloadFile(JSON.parse(data)));\r\n    // downloadFile(JSON.parse(data));\r\n  };\r\n\r\n  const downloadFile = (data) => {\r\n    console.log(\"download file\");\r\n    // console.log(data);\r\n\r\n    if (data.status) {\r\n      console.log(data);\r\n      var filePath = encodeURI(data.path);\r\n\r\n      var url =\r\n      FILE_SERVER_HOST+\"/services/files/download/\" +\r\n        filePath +\r\n        \"?token=\" +\r\n        data.token;\r\n      const newWindow = window.open(url, \"_blank\", \"noopener,noreferrer\");\r\n      if (newWindow) newWindow.opener = null;\r\n      window.location.reload();\r\n    } else {\r\n      alert(\"Download Request Denied\");\r\n      if (data.token == \"TOKEN_EXPIRED\") {\r\n        setTokenExpired(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const expireDialog = () => {\r\n    setTokenExpired(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Col sm=\"12\">\r\n        <Container className=\"\">\r\n          <Row>\r\n            <Col>{files ? <FilesInfo files={files} /> : \"\"}</Col>\r\n          </Row>\r\n\r\n          {data ? (\r\n            <DMovCard\r\n              imgurl={imgurl}\r\n              title={data.title}\r\n              rating={data.rating}\r\n              published={data.date_published}\r\n              genres={data.genre}\r\n              summary={data.summary}\r\n              stars={data.actors}\r\n              type={data.type}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Container>\r\n\r\n        <div className=\"movSpace\"></div>\r\n      </Col>\r\n      {tokenExpired ? (\r\n        <>\r\n          <div className=\"loginContainer\">\r\n            <div className=\"loginOverlay\" onClick={(e) => expireDialog()}></div>\r\n            <div className=\"loginWrapper\">\r\n              <h5>Download time expired. </h5>\r\n\r\n              <br />\r\n\r\n              <Fab\r\n                variant=\"extended\"\r\n                color=\"default\"\r\n                type=\"submit\"\r\n                onClick={(e) => expireDialog()}\r\n              >\r\n                Close\r\n              </Fab>\r\n              <div className=\"clearFix\"></div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DownloadMovie;\r\n","F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\tv\\Tv.js",[],"F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\navigation\\Nav.js",["104","105"],"import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"./../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./../../App.css\";\r\nimport \"./../search/SearchF\";\r\nimport { Lightning, Film, Tv, Search } from \"react-bootstrap-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchF from \"./../search/SearchF\";\r\nfunction Nav() {\r\n  return (\r\n    <nav className=\"mainNav\">\r\n      <ul>\r\n        <Link to=\"/\">\r\n          <li className=\"active\">\r\n            <Lightning size=\"20\" />\r\n            <span className=\"navText\">Featured</span>\r\n          </li>\r\n        </Link>\r\n\r\n        <Link to=\"/movies/0\">\r\n          <li>\r\n            <Film size=\"20\" />\r\n            <span className=\"navText\">Movies</span>\r\n          </li>\r\n        </Link>\r\n\r\n        <Link to=\"/tv\">\r\n          <li>\r\n            <Tv size=\"20\" />\r\n            <span className=\"navText\">TV</span>\r\n          </li>\r\n        </Link>\r\n\r\n        <li>\r\n          <SearchF />\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\downloadMovie\\DMovCard.js",["106","107"],"import React from \"react\";\r\nimport { Col, Image, Row } from \"react-bootstrap\";\r\nimport \"./../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./../moviecard/moviecard.css\";\r\nimport { Film, Tv } from \"react-bootstrap-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction dMovCard({\r\n  imgurl,\r\n  title,\r\n  rating,\r\n  published,\r\n  genres,\r\n  summary,\r\n  stars,\r\n  type,\r\n}) {\r\n  const Genres = ({ gens }) => {\r\n    // Loop through the array and create a badge-like component instead of a comma-separated string\r\n    gens = gens.split(\",\");\r\n    return (\r\n      <>\r\n        {gens.map((genre, idx) => {\r\n          return (\r\n            <p key={idx} className=\"smovWrapper\">\r\n              {genre}\r\n            </p>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const Cast = ({ actors }) => {\r\n    actors = actors.split(\",\");\r\n    return (\r\n      <>\r\n        {actors.map((actor, idx) => {\r\n          return (\r\n            <p key={idx} className=\"smovWrapper\">\r\n              {actor}\r\n            </p>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const Type = ({ rType }) => {\r\n    var typeIco = \"\";\r\n    if (rType == \"movie\") {\r\n      typeIco = (\r\n        <Link to=\"/movies\">\r\n          <Film size=\"20\" />\r\n          <span className=\"navText\">Movies</span>\r\n        </Link>\r\n      );\r\n    } else if (rType == \"series\") {\r\n      typeIco = (\r\n        <Link to=\"/tv\">\r\n          <Tv size=\"20\" />\r\n          <span className=\"navText\">TV Series</span>\r\n        </Link>\r\n      );\r\n    }\r\n\r\n    return typeIco;\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col sm=\"4\">\r\n        <Image className=\"posterImg\" src={imgurl} />\r\n      </Col>\r\n      <Col className=\"smovCard\">\r\n        <div className=\"\"></div>\r\n        <h2 className=\"movie-title\">\r\n          <span>{title}</span>\r\n          <Type rType={type} />\r\n        </h2>\r\n        <p className=\"floatLeft\">\r\n          <span className=\"movLbl\">Rating : </span>\r\n          <span className=\"movDtl yellow\">\r\n            {rating}\r\n            <small>/10</small>\r\n          </span>\r\n        </p>\r\n        <p className=\"floatRight\">\r\n          <span className=\"movLbl\">Released : </span>\r\n          <span className=\"movDtl yellow\">{published}</span>\r\n        </p>\r\n        <div className=\"clearfix\"></div>\r\n        <p>\r\n          <span className=\"movLbl\">Genre(s) : </span>\r\n        </p>\r\n        <p>{genres ? <Genres gens={genres} /> : \"\"}</p>\r\n\r\n        <div className=\"movSpace\"></div>\r\n        <div className=\"hrLine\"></div>\r\n        {/* <Genres gens={genres} /> */}\r\n        <p>{summary}</p>\r\n        <div className=\"movSpace\"></div>\r\n        <div className=\"hrLine\"></div>\r\n        <p>\r\n          <span className=\"movLbl\">Cast : </span>\r\n        </p>\r\n        <div className=\"movSpace\"></div>\r\n        {stars ? <Cast actors={stars} /> : \"\"}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default dMovCard;\r\n","F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\moviecard\\MovieCard.js",[],"F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\constants\\HOSTS_CONSTANT.js",[],"F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\smovie\\SMovCard.js",["108","109"],"import React from \"react\";\r\nimport { Col, Image, Row, Button } from \"react-bootstrap\";\r\nimport \"./../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./../moviecard/moviecard.css\";\r\nimport { Film, Tv, Download } from \"react-bootstrap-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SMovCard({\r\n  id,\r\n  imgurl,\r\n  title,\r\n  rating,\r\n  published,\r\n  genres,\r\n  summary,\r\n  stars,\r\n  type,\r\n  local_path,\r\n}) {\r\n  const download_path = \"/download/\" + id;\r\n  const Genres = ({ gens }) => {\r\n    // Loop through the array and create a badge-like component instead of a comma-separated string\r\n    gens = gens.split(\",\");\r\n    return (\r\n      <>\r\n        {gens.map((genre, idx) => {\r\n          return (\r\n            <p key={idx} className=\"smovWrapper\">\r\n              {genre}\r\n            </p>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const Cast = ({ actors }) => {\r\n    actors = actors.split(\",\");\r\n    return (\r\n      <>\r\n        {actors.map((actor, idx) => {\r\n          return (\r\n            <p key={idx} className=\"smovWrapper\">\r\n              {actor}\r\n            </p>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const Type = ({ rType }) => {\r\n    var typeIco = \"\";\r\n    if (rType == \"movie\") {\r\n      typeIco = (\r\n        <Link to=\"/movies\">\r\n          <Film size=\"20\" />\r\n          <span className=\"navText\">Movies</span>\r\n        </Link>\r\n      );\r\n    } else if (rType == \"series\") {\r\n      typeIco = (\r\n        <Link to=\"/tv\">\r\n          <Tv size=\"20\" />\r\n          <span className=\"navText\">TV Series</span>\r\n        </Link>\r\n      );\r\n    }\r\n\r\n    return typeIco;\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col sm=\"4\">\r\n        <Image className=\"posterImg\" src={imgurl} />\r\n      </Col>\r\n      <Col className=\"smovCard\">\r\n        <h2 className=\"movie-title\">\r\n          <span>{title}</span>\r\n          <Type rType={type} />\r\n        </h2>\r\n        <h3>\r\n          {/* <div>\r\n            {\" \"}\r\n            <GoBack />{\" \"}\r\n          </div> */}\r\n        </h3>\r\n        <p className=\"floatLeft\">\r\n          <span className=\"movLbl\">Rating : </span>\r\n          <span className=\"movDtl yellow\">\r\n            {rating}\r\n            <small>/10</small>\r\n          </span>\r\n        </p>\r\n        <p className=\"floatRight\">\r\n          <span className=\"movLbl\">Released : </span>\r\n          <span className=\"movDtl yellow\">{published}</span>\r\n        </p>\r\n        <div className=\"clearfix\"></div>\r\n        <p className=\"floatLeft\">\r\n          <Link to={download_path}>\r\n            <Button>\r\n              Download &nbsp;&nbsp;\r\n              <Download size=\"26\" />\r\n            </Button>\r\n          </Link>\r\n        </p>\r\n        <div className=\"clearfix\"></div>\r\n        <p>\r\n          <span className=\"movLbl\">Genre(s) : </span>\r\n        </p>\r\n        <p>{genres ? <Genres gens={genres} /> : \"\"}</p>\r\n\r\n        <div className=\"movSpace\"></div>\r\n        <div className=\"hrLine\"></div>\r\n        {/* <Genres gens={genres} /> */}\r\n        <p>{summary}</p>\r\n        <div className=\"movSpace\"></div>\r\n        <div className=\"hrLine\"></div>\r\n        <p>\r\n          <span className=\"movLbl\">Cast : </span>\r\n        </p>\r\n        <div className=\"movSpace\"></div>\r\n        {stars ? <Cast actors={stars} /> : \"\"}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default SMovCard;\r\n","F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\fetchList\\FetchListAlt.js",["110","111","112","113","114","115","116","117","118","119"],"F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\profile\\Profile.js",["120","121","122","123"],"import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"./../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./profile.css\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { PersonCircle, Power, PlusCircleFill } from \"react-bootstrap-icons\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport  {API_HOST, CLIENT_HOST} from \"../../constants/HOSTS_CONSTANT\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction Profile(session) {\r\n  const [cookies, setCookie, removeCookie] = useCookies([]);\r\n  const [isprofilePop, setIsProfilePop] = useState(false);\r\n  const [profileData, setProfileData] = useState();\r\n  const [isTopup, setIsTopup] = useState(false);\r\n  const [istopupError, setIsTopupError] = useState(false);\r\n\r\n  session = session.session;\r\n  //   console.log(session);\r\n  useEffect(() => {\r\n    if (!profileData) {\r\n      getProfileData();\r\n    }\r\n  });\r\n  const profilePop = () => {\r\n    setIsProfilePop(true);\r\n  };\r\n  const closeProfilePop = () => {\r\n    setIsProfilePop(false);\r\n  };\r\n\r\n  const getProfileData = () => {\r\n    var post_data = JSON.stringify({ session: session });\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Content-Length\": Buffer.byteLength(post_data),\r\n      },\r\n      body: post_data,\r\n    };\r\n    fetch(API_HOST+\"/authprofile\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.status) {\r\n          // setLoginError(\"Username or Password is incorrect\");\r\n          //   removeCookie(\"userlogin\");\r\n        } else {\r\n          //   console.log(data.status);\r\n          //   console.log(data.data);\r\n          setProfileData(data.data);\r\n        }\r\n      });\r\n  };\r\n\r\n  const logOut = () => {\r\n    var post_data = JSON.stringify({ session: session });\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Content-Length\": Buffer.byteLength(post_data),\r\n      },\r\n      body: post_data,\r\n    };\r\n    fetch(API_HOST+\"/authlogout\", requestOptions)\r\n      .then(removeCookie(\"userlogin\", { path: \"/\" }))\r\n      .then(window.location.reload());\r\n\r\n    // console.log(cookies.userlogin);\r\n  };\r\n\r\n  const ProfileDetails = () => {\r\n    return (\r\n      <>\r\n        <p>\r\n          Email: {profileData.email}\r\n          <div className=\"clearfix\"></div>\r\n        </p>\r\n        <hr></hr>\r\n        <p>\r\n          Balance: {profileData.balance}\r\n          <div className=\"clearfix\"></div>\r\n        </p>\r\n        <hr></hr>\r\n        <Fab\r\n          variant=\"extended\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          onClick={(e) => topupShow()}\r\n        >\r\n          Topup\r\n        </Fab>\r\n        <hr></hr>\r\n        <br></br>\r\n        <Fab\r\n          variant=\"extended\"\r\n          className=\"logoutButton\"\r\n          onClick={(e) => logOut()}\r\n        >\r\n          LOGOUT\r\n        </Fab>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const TopUp = () => {\r\n    return (\r\n      <>\r\n        <div className=\"profileContainer\">\r\n          <div className=\"overlay\" onClick={(e) => topupHide()}></div>\r\n          <div className=\"loginWrapper\">\r\n            <h5>Topup</h5>\r\n            <h6>Current Balance: {profileData.balance}</h6>\r\n            <div className=\"clearFix\"></div>\r\n            {istopupError ? (\r\n              <span className=\"loginError\">{istopupError}</span>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <br />\r\n            <form onSubmit={(e) => topupSubmit(e)}>\r\n              <TextField\r\n                key=\"scratchCard\"\r\n                id=\"scratchCard\"\r\n                label=\"000 000 000\"\r\n                variant=\"outlined\"\r\n                required\r\n                autoComplete=\"off\"\r\n              />\r\n              <br />\r\n              <br />\r\n              <Fab variant=\"extended\" color=\"default\" type=\"submit\">\r\n                Topup &nbsp;\r\n                <PlusCircleFill size=\"20\" />\r\n              </Fab>\r\n            </form>\r\n            <div className=\"clearFix\"></div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const topupShow = () => {\r\n    setIsTopup(true);\r\n    closeProfilePop();\r\n  };\r\n\r\n  const topupHide = () => {\r\n    setIsTopup(false);\r\n  };\r\n\r\n  const topupSubmit = (e) => {\r\n    var scratchCard = document.getElementById(\"scratchCard\");\r\n    var userSession = cookies.userlogin;\r\n    console.log(\"session: \" + userSession);\r\n    var post_data = JSON.stringify({\r\n      scratchCard: scratchCard.value,\r\n      session: userSession,\r\n    });\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Content-Length\": Buffer.byteLength(post_data),\r\n      },\r\n      body: post_data,\r\n    };\r\n    fetch(API_HOST+\"/topup\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data.status);\r\n        if (data.status) {\r\n          setIsTopupError(\"Wrong card number or Used card\");\r\n          // console.log(istopupError);\r\n        } else {\r\n          getProfileData();\r\n        }\r\n      });\r\n    // .then(window.location.reload());\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"profileButton\">\r\n        <Fab variant=\"extended\" onClick={(e) => profilePop()}>\r\n          <PersonCircle size=\"20\" />\r\n        </Fab>\r\n      </div>\r\n\r\n      {isprofilePop ? (\r\n        <div className=\"profileContainer\">\r\n          <div className=\"overlay\" onClick={(e) => closeProfilePop()}></div>\r\n          <div className=\"profileWrapper\">\r\n            {profileData ? <ProfileDetails /> : \"\"}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {isTopup ? <TopUp /> : \"\"}\r\n    </>\r\n  );\r\n}\r\nexport default Profile;\r\n","F:\\Zigmac\\Web\\MovieDB\\App\\ZiGMAC-Movies\\Movie_Sorting_App\\reactimdbclient\\src\\components\\search\\SearchF.js",["124","125","126","127","128","129","130"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Container, Row, Col } from \"react-bootstrap\";\r\nimport \"./../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Search.css\";\r\nimport { Search, X, ArrowRightCircleFill } from \"react-bootstrap-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useHistory, Redirect } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n}));\r\n\r\nfunction SearchF() {\r\n  const history = useHistory();\r\n  const [searchParam, setSearchParam] = useState(null);\r\n  const classes = useStyles();\r\n  const [fullscreen, setFullscreen] = useState(true);\r\n  const [show, setShow] = useState(false);\r\n\r\n  function handleShow(breakpoint) {\r\n    setFullscreen(breakpoint);\r\n    setShow(true);\r\n  }\r\n\r\n  function handleSearch(e) {\r\n    var searchP = e.target.value;\r\n    setSearchParam(searchP);\r\n  }\r\n\r\n  function sendSearch() {\r\n    console.log(searchParam);\r\n    var url = \"/search/\" + searchParam;\r\n    history.push(url);\r\n    setShow(false);\r\n    setSearchParam(null);\r\n    document.getElementById(\"standard-basic\").value = \"\";\r\n    // <Redirect to={url} />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <span onClick={(e) => handleShow(true)} className=\"serach-btn\">\r\n        <Search size=\"26\" />\r\n      </span>\r\n      <Modal show={show} fullscreen={fullscreen} onHide={() => setShow(false)}>\r\n        <Modal.Body>\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            label=\"Search\"\r\n            type=\"text\"\r\n            className=\"searchText\"\r\n            name=\"searchTerm\"\r\n            onChange={(e) => handleSearch(e)}\r\n            autoComplete=\"off\"\r\n          />\r\n          <div className=\"serach-btn-2\">\r\n            <ArrowRightCircleFill\r\n              size=\"20\"\r\n              onClick={(e) => sendSearch()}\r\n              className=\"send-btn\"\r\n            />\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchF;\r\n",{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":7,"column":20,"nodeType":"137","messageId":"138","endLine":7,"endColumn":31},{"ruleId":"135","severity":1,"message":"136","line":7,"column":20,"nodeType":"137","messageId":"138","endLine":7,"endColumn":31},{"ruleId":"135","severity":1,"message":"136","line":12,"column":20,"nodeType":"137","messageId":"138","endLine":12,"endColumn":31},{"ruleId":"135","severity":1,"message":"139","line":27,"column":9,"nodeType":"137","messageId":"138","endLine":27,"endColumn":14},{"ruleId":"135","severity":1,"message":"140","line":35,"column":9,"nodeType":"137","messageId":"138","endLine":35,"endColumn":16},{"ruleId":"141","severity":1,"message":"142","line":54,"column":6,"nodeType":"143","endLine":54,"endColumn":8,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":57,"column":12,"nodeType":"147","messageId":"148","endLine":57,"endColumn":14},{"ruleId":"141","severity":1,"message":"149","line":68,"column":6,"nodeType":"143","endLine":68,"endColumn":8,"suggestions":"150"},{"ruleId":"135","severity":1,"message":"151","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":16},{"ruleId":"135","severity":1,"message":"152","line":4,"column":27,"nodeType":"137","messageId":"138","endLine":4,"endColumn":39},{"ruleId":"135","severity":1,"message":"136","line":10,"column":20,"nodeType":"137","messageId":"138","endLine":10,"endColumn":31},{"ruleId":"145","severity":1,"message":"153","line":33,"column":20,"nodeType":"147","messageId":"148","endLine":33,"endColumn":22},{"ruleId":"135","severity":1,"message":"136","line":10,"column":20,"nodeType":"137","messageId":"138","endLine":10,"endColumn":31},{"ruleId":"135","severity":1,"message":"154","line":20,"column":19,"nodeType":"137","messageId":"138","endLine":20,"endColumn":28},{"ruleId":"135","severity":1,"message":"155","line":20,"column":30,"nodeType":"137","messageId":"138","endLine":20,"endColumn":42},{"ruleId":"141","severity":1,"message":"156","line":28,"column":6,"nodeType":"143","endLine":28,"endColumn":8,"suggestions":"157"},{"ruleId":"145","severity":1,"message":"153","line":147,"column":22,"nodeType":"147","messageId":"148","endLine":147,"endColumn":24},{"ruleId":"135","severity":1,"message":"151","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":16},{"ruleId":"135","severity":1,"message":"158","line":6,"column":31,"nodeType":"137","messageId":"138","endLine":6,"endColumn":37},{"ruleId":"145","severity":1,"message":"153","line":51,"column":15,"nodeType":"147","messageId":"148","endLine":51,"endColumn":17},{"ruleId":"145","severity":1,"message":"153","line":58,"column":22,"nodeType":"147","messageId":"148","endLine":58,"endColumn":24},{"ruleId":"145","severity":1,"message":"153","line":54,"column":15,"nodeType":"147","messageId":"148","endLine":54,"endColumn":17},{"ruleId":"145","severity":1,"message":"153","line":61,"column":22,"nodeType":"147","messageId":"148","endLine":61,"endColumn":24},{"ruleId":"135","severity":1,"message":"159","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":16},{"ruleId":"135","severity":1,"message":"160","line":3,"column":10,"nodeType":"137","messageId":"138","endLine":3,"endColumn":15},{"ruleId":"135","severity":1,"message":"161","line":6,"column":8,"nodeType":"137","messageId":"138","endLine":6,"endColumn":12},{"ruleId":"135","severity":1,"message":"162","line":12,"column":3,"nodeType":"137","messageId":"138","endLine":12,"endColumn":22},{"ruleId":"135","severity":1,"message":"163","line":13,"column":3,"nodeType":"137","messageId":"138","endLine":13,"endColumn":23},{"ruleId":"135","severity":1,"message":"164","line":36,"column":10,"nodeType":"137","messageId":"138","endLine":36,"endColumn":15},{"ruleId":"135","severity":1,"message":"140","line":42,"column":9,"nodeType":"137","messageId":"138","endLine":42,"endColumn":16},{"ruleId":"135","severity":1,"message":"165","line":48,"column":7,"nodeType":"137","messageId":"138","endLine":48,"endColumn":12},{"ruleId":"141","severity":1,"message":"166","line":69,"column":6,"nodeType":"143","endLine":69,"endColumn":14,"suggestions":"167"},{"ruleId":"141","severity":1,"message":"168","line":100,"column":6,"nodeType":"143","endLine":100,"endColumn":27,"suggestions":"169"},{"ruleId":"135","severity":1,"message":"151","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":16},{"ruleId":"135","severity":1,"message":"170","line":6,"column":24,"nodeType":"137","messageId":"138","endLine":6,"endColumn":29},{"ruleId":"135","severity":1,"message":"136","line":10,"column":20,"nodeType":"137","messageId":"138","endLine":10,"endColumn":31},{"ruleId":"135","severity":1,"message":"154","line":14,"column":19,"nodeType":"137","messageId":"138","endLine":14,"endColumn":28},{"ruleId":"135","severity":1,"message":"171","line":1,"column":27,"nodeType":"137","messageId":"138","endLine":1,"endColumn":36},{"ruleId":"135","severity":1,"message":"172","line":2,"column":17,"nodeType":"137","messageId":"138","endLine":2,"endColumn":26},{"ruleId":"135","severity":1,"message":"173","line":2,"column":28,"nodeType":"137","messageId":"138","endLine":2,"endColumn":31},{"ruleId":"135","severity":1,"message":"174","line":2,"column":33,"nodeType":"137","messageId":"138","endLine":2,"endColumn":36},{"ruleId":"135","severity":1,"message":"175","line":5,"column":18,"nodeType":"137","messageId":"138","endLine":5,"endColumn":19},{"ruleId":"135","severity":1,"message":"176","line":8,"column":22,"nodeType":"137","messageId":"138","endLine":8,"endColumn":30},{"ruleId":"135","severity":1,"message":"140","line":17,"column":9,"nodeType":"137","messageId":"138","endLine":17,"endColumn":16},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"no-unused-vars","'CLIENT_HOST' is defined but never used.","Identifier","unusedVar","'type2' is assigned a value but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'spFetch'. Either include it or remove the dependency array.","ArrayExpression",["179"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'sp'. Either include it or remove the dependency array.",["180"],"'Button' is defined but never used.","'BoxArrowLeft' is defined but never used.","Expected '===' and instead saw '=='.","'setCookie' is assigned a value but never used.","'removeCookie' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchItems'. Either include it or remove the dependency array.",["181"],"'Search' is defined but never used.","'ReactDOM' is defined but never used.","'Route' is defined but never used.","'Form' is defined but never used.","'ArrowLeftCircleFill' is defined but never used.","'ArrowRightCircleFill' is defined but never used.","'uPage' is assigned a value but never used.","'stOff' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'limit' and 'page'. Either include them or remove the dependency array.",["182"],"React Hook useEffect has missing dependencies: 'history', 'limit', 'page', and 'type2'. Either include them or remove the dependency array.",["183"],"'Power' is defined but never used.","'useEffect' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'X' is defined but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},"Update the dependencies array to be: [spFetch]",{"range":"194","text":"195"},"Update the dependencies array to be: [sp]",{"range":"196","text":"197"},"Update the dependencies array to be: [fetchItems]",{"range":"198","text":"199"},"Update the dependencies array to be: [limit, mCount, page]",{"range":"200","text":"201"},"Update the dependencies array to be: [offset, genre, sort, type2, limit, history, page]",{"range":"202","text":"203"},[1437,1439],"[spFetch]",[1699,1701],"[sp]",[1034,1036],"[fetchItems]",[1897,1905],"[limit, mCount, page]",[2540,2561],"[offset, genre, sort, type2, limit, history, page]"]